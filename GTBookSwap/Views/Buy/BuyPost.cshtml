@model GTBookSwap.Models.Buy_User

<div class="container">
    @{Html.RenderAction("_BuyPost");}
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="container">
        <div class="form-group">
            <h2>@Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })</h2>
            <div class="col-md-10">
                @Html.TextBox("Title", (string)ViewBag.Title, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>
    </div>

    <div class="container">
        <div class="form-group">
            <h2>@Html.LabelFor(model => model.Author, new { @class = "control-label col-md-2" })</h2>
            <div class="col-md-5">
                @Html.TextBox("Author", (string)ViewBag.Author, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Author)
            </div>
        </div>
    </div>

    <div class="container">
        <div class="form-group">
            <h2>@Html.LabelFor(model => model.Edition, new { @class = "control-label col-md-2" })</h2>
            <div class="col-md-5">
                @Html.TextBox("Year", (string)ViewBag.Year, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Edition)
            </div>
        </div>
    </div>

    <div class="container">
        <div class="form-group">
            <h2>@Html.LabelFor(model => model.ISBN, new { @class = "control-label col-md-2" })</h2>
            <div class="col-md-5">
                @Html.TextBox("ISBN", (string)ViewBag.ISBN, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ISBN)
            </div>
        </div>
    </div>

    <div class="container">
        <div class="form-group">
            <h2>@Html.LabelFor(model => model.Desc, new { @class = "control-label col-md-2" })</h2>
            <div class="col-md-5">
                @Html.TextAreaFor(model => model.Desc, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Desc)
            </div>

        </div>
    </div>
    <div class="container">
        <div class="form-group">
            <h2>@Html.Label("Course", new { @class = "control-label col-md-2" })</h2>
            <div class="col-md-5">
                @Html.DropDownList("GT_Course", ViewBag.courseid as SelectList, "Select a Course", new { @class = "drop-control", id = "course" })
            </div>
        </div>
    </div>

    <div class="container">
        <div class="form-group">
            <h2>@Html.Label("Course #", new { @class = "control-label col-md-2" })</h2>
            <div class="col-md-5">
                <select class="drop-control" id="Class" name="courseNum">
                    <option>Select a Class</option>
                </select>
            </div>
        </div>
    </div>
    
    <div class="container">
        <div class="form-group">
            <h2>@Html.Label("I want to reveal ", new { @class = "control-label col-md-2" })</h2>
            <div class="col-md-5">
                @Html.DropDownList("userinfo", new SelectList(new List<Object>{
                        new {value = "Only e-mail", text = "Only e-mail"},
                        new {value = "E-mail + Phone", text = "E-mail + Phone"} 
                        }, "value", "text"), new { @class = "drop-control" })
            </div>
        </div>
    </div>


    <div class="container">
        <input type="submit" value="Post" class="btn btn-default btn-lg">
        <input type="reset" value="Reset" class="btn btn-default btn-lg">
        <!--Add back to list button-->
        @Html.ActionLink("Cancel", "BuyIndex", "Buy", routeValues: null, htmlAttributes: new { @class = "btn btn-default btn-lg" })
    </div>


}

<script type="text/jscript">
    var IndexURL = {
        ListUrl: '@Url.Action("classList", "Buy")'
    };
    $(function () {
        // $('#class').hide();

        $('#course').change(function () {
            $.ajax({

                url: IndexURL.ListUrl + "/" + $('#course').val(),
                dataType: "json",
                success: function (data) {
                    var items = "";
                    $.each(data, function (index, Class) {
                        items += "<option value = '" + Class.Value + "'>" + Class.Text + "</option>";
                    });
                    $('#Class').html(items);
                    $('#Class').show();
                },
                error: function (data) {
                    var items = "";
                    items += "<option>Select a Class</option>";
                     $('#Class').html(items);
                    $('#Class').show();
                }
            })
        });
    });
</script>